{"numFailedTestSuites":2,"numFailedTests":2,"numPassedTestSuites":9,"numPassedTests":49,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":11,"numTotalTests":51,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1743945794204,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["FoodsService"],"duration":68,"failureDetails":[{"type":"FoodsService","context":{"index":0,"dependencies":["FoodRepository",null],"name":"FoodRepository"},"metadata":{"id":"54246cc9d8703f22c6229"},"moduleRef":{"id":"0f51b0c24954246cc9d87"}}],"failureMessages":["Error: Nest can't resolve dependencies of the FoodsService (?, OpenFoodFactsService). Please make sure that the argument \"FoodRepository\" at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If \"FoodRepository\" is a provider, is it part of the current RootTestModule?\n- If \"FoodRepository\" is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing \"FoodRepository\" */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/DBCARVALHO/development/smartnutri/backend/src/foods/foods.service.spec.ts:8:35)"],"fullName":"FoodsService should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"}],"endTime":1743945797103,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFoodsService › should be defined\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the FoodsService (?, OpenFoodFactsService). Please make sure that the argument \"FoodRepository\" at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If \"FoodRepository\" is a provider, is it part of the current RootTestModule?\n    - If \"FoodRepository\" is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing \"FoodRepository\" */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  6 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  7 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  8 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mFoodsService\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/foods/foods.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:8:35)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/foods/foods.service.spec.ts","startTime":1743945794340,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["FoodsController"],"duration":59,"failureDetails":[{"type":"FoodsController","context":{"index":0,"dependencies":[null]},"metadata":{"id":"499ecf9fefe5907d0511e"},"moduleRef":{"id":"1d2fcb8b59499ecf9fefe"}}],"failureMessages":["Error: Nest can't resolve dependencies of the FoodsController (?). Please make sure that the argument FoodsService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If FoodsService is a provider, is it part of the current RootTestModule?\n- If FoodsService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing FoodsService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadController (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/injector.js:89:9)\n    at /Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:68:13\n    at async Promise.all (index 0)\n    at TestingInstanceLoader.createInstancesOfControllers (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:67:9)\n    at /Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:42:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/DBCARVALHO/development/smartnutri/backend/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/DBCARVALHO/development/smartnutri/backend/src/foods/foods.controller.spec.ts:8:35)"],"fullName":"FoodsController should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"}],"endTime":1743945797677,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFoodsController › should be defined\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the FoodsController (?). Please make sure that the argument FoodsService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If FoodsService is a provider, is it part of the current RootTestModule?\n    - If FoodsService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing FoodsService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  6 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  7 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  8 |\u001b[39m     \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m       controllers\u001b[33m:\u001b[39m [\u001b[33mFoodsController\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadController (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:89:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:68:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfControllers (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:67:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:42:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/foods/foods.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:8:35)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/foods/foods.controller.spec.ts","startTime":1743945797108,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["CreateMealFoodDto"],"duration":84,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealFoodDto should validate a valid meal food","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate a valid meal food"},{"ancestorTitles":["CreateMealFoodDto"],"duration":63,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealFoodDto should fail validation when foodId is not a valid UUID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when foodId is not a valid UUID"},{"ancestorTitles":["CreateMealFoodDto"],"duration":52,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealFoodDto should fail validation when amount is negative","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when amount is negative"},{"ancestorTitles":["CreateMealFoodDto"],"duration":40,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealFoodDto should fail validation when unit is empty","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when unit is empty"},{"ancestorTitles":["CreateMealFoodDto"],"duration":40,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealFoodDto should fail validation when all fields are missing","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should fail validation when all fields are missing"}],"endTime":1743945798422,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/meal-plans/dto/create-meal-food.dto.spec.ts","startTime":1743945797680,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PatientsService"],"duration":62,"failureDetails":[],"failureMessages":[],"fullName":"PatientsService should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["PatientsService","create"],"duration":57,"failureDetails":[],"failureMessages":[],"fullName":"PatientsService create should create a patient with valid data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create a patient with valid data"},{"ancestorTitles":["PatientsService","findAll"],"duration":49,"failureDetails":[],"failureMessages":[],"fullName":"PatientsService findAll should return an array of patients","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an array of patients"},{"ancestorTitles":["PatientsService","findOne"],"duration":48,"failureDetails":[],"failureMessages":[],"fullName":"PatientsService findOne should return a patient by id","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return a patient by id"},{"ancestorTitles":["PatientsService","update"],"duration":48,"failureDetails":[],"failureMessages":[],"fullName":"PatientsService update should update a patient","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should update a patient"},{"ancestorTitles":["PatientsService","addMeasurement"],"duration":53,"failureDetails":[],"failureMessages":[],"fullName":"PatientsService addMeasurement should add a measurement to a patient","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add a measurement to a patient"},{"ancestorTitles":["PatientsService","getMeasurements"],"duration":42,"failureDetails":[],"failureMessages":[],"fullName":"PatientsService getMeasurements should return all measurements for a patient","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return all measurements for a patient"},{"ancestorTitles":["PatientsService","remove"],"duration":37,"failureDetails":[],"failureMessages":[],"fullName":"PatientsService remove should remove a patient","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should remove a patient"}],"endTime":1743945799298,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/patients/patients.service.spec.ts","startTime":1743945798425,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MealPlansController"],"duration":53,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansController should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["MealPlansController","create"],"duration":55,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansController create should create a meal plan","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a meal plan"},{"ancestorTitles":["MealPlansController","findAll"],"duration":43,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansController findAll should return an array of meal plans","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return an array of meal plans"},{"ancestorTitles":["MealPlansController","findOne"],"duration":39,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansController findOne should return a meal plan","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return a meal plan"},{"ancestorTitles":["MealPlansController","update"],"duration":40,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansController update should update a meal plan","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update a meal plan"},{"ancestorTitles":["MealPlansController","remove"],"duration":38,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansController remove should remove a meal plan","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should remove a meal plan"},{"ancestorTitles":["MealPlansController","addMeal"],"duration":38,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansController addMeal should add a meal to a meal plan","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should add a meal to a meal plan"}],"endTime":1743945800064,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/meal-plans/meal-plans.controller.spec.ts","startTime":1743945799300,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PatientsController","create"],"duration":53,"failureDetails":[],"failureMessages":[],"fullName":"PatientsController create should create a patient","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a patient"},{"ancestorTitles":["PatientsController","findAll"],"duration":61,"failureDetails":[],"failureMessages":[],"fullName":"PatientsController findAll should return an array of patients","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return an array of patients"},{"ancestorTitles":["PatientsController","findOne"],"duration":44,"failureDetails":[],"failureMessages":[],"fullName":"PatientsController findOne should return a patient","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return a patient"},{"ancestorTitles":["PatientsController","update"],"duration":40,"failureDetails":[],"failureMessages":[],"fullName":"PatientsController update should update a patient","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update a patient"},{"ancestorTitles":["PatientsController","remove"],"duration":39,"failureDetails":[],"failureMessages":[],"fullName":"PatientsController remove should remove a patient","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove a patient"},{"ancestorTitles":["PatientsController","createMeasurement"],"duration":37,"failureDetails":[],"failureMessages":[],"fullName":"PatientsController createMeasurement should create a measurement for a patient","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a measurement for a patient"},{"ancestorTitles":["PatientsController","findMeasurements"],"duration":51,"failureDetails":[],"failureMessages":[],"fullName":"PatientsController findMeasurements should return an array of measurements for a patient","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return an array of measurements for a patient"}],"endTime":1743945800842,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/patients/patients.controller.spec.ts","startTime":1743945800066,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AppController","root"],"duration":49,"failureDetails":[],"failureMessages":[],"fullName":"AppController root should return \"Hello World!\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return \"Hello World!\""}],"endTime":1743945801357,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/app.controller.spec.ts","startTime":1743945800844,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["UpdateMealPlanDto"],"duration":53,"failureDetails":[],"failureMessages":[],"fullName":"UpdateMealPlanDto should validate a valid update","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate a valid update"},{"ancestorTitles":["UpdateMealPlanDto"],"duration":49,"failureDetails":[],"failureMessages":[],"fullName":"UpdateMealPlanDto should validate when only name is provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate when only name is provided"},{"ancestorTitles":["UpdateMealPlanDto"],"duration":37,"failureDetails":[],"failureMessages":[],"fullName":"UpdateMealPlanDto should validate when only dates are provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate when only dates are provided"},{"ancestorTitles":["UpdateMealPlanDto"],"duration":43,"failureDetails":[],"failureMessages":[],"fullName":"UpdateMealPlanDto should fail validation when endDate is before startDate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when endDate is before startDate"},{"ancestorTitles":["UpdateMealPlanDto"],"duration":36,"failureDetails":[],"failureMessages":[],"fullName":"UpdateMealPlanDto should validate when notes are provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate when notes are provided"},{"ancestorTitles":["UpdateMealPlanDto"],"duration":43,"failureDetails":[],"failureMessages":[],"fullName":"UpdateMealPlanDto should validate when all fields are optional","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate when all fields are optional"}],"endTime":1743945802074,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/meal-plans/dto/update-meal-plan.dto.spec.ts","startTime":1743945801359,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CreateMealDto"],"duration":65,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealDto should validate a valid meal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate a valid meal"},{"ancestorTitles":["CreateMealDto"],"duration":55,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealDto should fail validation when name is empty","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when name is empty"},{"ancestorTitles":["CreateMealDto"],"duration":62,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealDto should fail validation when time is not in HH:mm format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when time is not in HH:mm format"},{"ancestorTitles":["CreateMealDto"],"duration":48,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealDto should fail validation when time is invalid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when time is invalid"},{"ancestorTitles":["CreateMealDto"],"duration":148,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealDto should validate mealFoods array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate mealFoods array"},{"ancestorTitles":["CreateMealDto"],"duration":125,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealDto should fail validation when mealFoods contains invalid items","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fail validation when mealFoods contains invalid items"}],"endTime":1743945803140,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/meal-plans/dto/create-meal.dto.spec.ts","startTime":1743945802077,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MealPlansService"],"duration":56,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansService should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["MealPlansService","create"],"duration":55,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansService create should create a meal plan","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create a meal plan"},{"ancestorTitles":["MealPlansService","findAll"],"duration":47,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansService findAll should return an array of meal plans","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return an array of meal plans"},{"ancestorTitles":["MealPlansService","findOne"],"duration":47,"failureDetails":[],"failureMessages":[],"fullName":"MealPlansService findOne should return a meal plan","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return a meal plan"}],"endTime":1743945803836,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/meal-plans/meal-plans.service.spec.ts","startTime":1743945803143,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CreateMealPlanDto"],"duration":61,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealPlanDto should validate a valid meal plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate a valid meal plan"},{"ancestorTitles":["CreateMealPlanDto"],"duration":57,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealPlanDto should fail validation when name is empty","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when name is empty"},{"ancestorTitles":["CreateMealPlanDto"],"duration":57,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealPlanDto should fail validation when patientId is not a valid UUID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when patientId is not a valid UUID"},{"ancestorTitles":["CreateMealPlanDto"],"duration":48,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealPlanDto should fail validation when endDate is before startDate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail validation when endDate is before startDate"},{"ancestorTitles":["CreateMealPlanDto"],"duration":49,"failureDetails":[],"failureMessages":[],"fullName":"CreateMealPlanDto should validate meals array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate meals array"}],"endTime":1743945804583,"message":"","name":"/Users/DBCARVALHO/development/smartnutri/backend/src/meal-plans/dto/create-meal-plan.dto.spec.ts","startTime":1743945803839,"status":"passed","summary":""}],"wasInterrupted":false}
