{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login do nutricionista",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso"
          },
          "401": {
            "description": "Credenciais inválidas"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/nutritionists": {
      "post": {
        "operationId": "NutritionistsController_create",
        "summary": "Criar nutricionista",
        "description": "Cria um novo nutricionista no sistema",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNutritionistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Nutricionista criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nutritionist"
                }
              }
            }
          },
          "409": {
            "description": "Email já cadastrado"
          }
        },
        "tags": [
          "nutritionists"
        ]
      },
      "get": {
        "operationId": "NutritionistsController_findAll",
        "summary": "Listar nutricionistas",
        "description": "Retorna a lista de todos os nutricionistas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de nutricionistas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Nutritionist"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "nutritionists"
        ]
      }
    },
    "/nutritionists/{id}": {
      "get": {
        "operationId": "NutritionistsController_findOne",
        "summary": "Buscar nutricionista",
        "description": "Retorna os detalhes de um nutricionista específico",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do nutricionista",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Nutricionista encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nutritionist"
                }
              }
            }
          },
          "404": {
            "description": "Nutricionista não encontrado"
          }
        },
        "tags": [
          "nutritionists"
        ]
      },
      "patch": {
        "operationId": "NutritionistsController_update",
        "summary": "Atualizar nutricionista",
        "description": "Atualiza os dados de um nutricionista específico",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do nutricionista",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNutritionistDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Nutricionista atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nutritionist"
                }
              }
            }
          },
          "404": {
            "description": "Nutricionista não encontrado"
          },
          "409": {
            "description": "Email já cadastrado"
          }
        },
        "tags": [
          "nutritionists"
        ]
      },
      "delete": {
        "operationId": "NutritionistsController_remove",
        "summary": "Remover nutricionista",
        "description": "Remove um nutricionista do sistema",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do nutricionista",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Nutricionista removido com sucesso"
          },
          "404": {
            "description": "Nutricionista não encontrado"
          }
        },
        "tags": [
          "nutritionists"
        ]
      }
    },
    "/patients": {
      "post": {
        "operationId": "PatientsController_create",
        "summary": "Criar novo paciente",
        "description": "Cria um novo paciente com todas as informações necessárias.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Paciente criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          },
          "409": {
            "description": "Paciente já existe com o mesmo CPF ou email"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "PatientsController_findAll",
        "summary": "Listar todos os pacientes",
        "description": "Retorna uma lista de todos os pacientes cadastrados.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de pacientes retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Patient"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{id}": {
      "get": {
        "operationId": "PatientsController_findOne",
        "summary": "Buscar paciente por ID",
        "description": "Retorna os detalhes de um paciente específico",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "PatientsController_update",
        "summary": "Atualizar paciente",
        "description": "Atualiza as informações de um paciente existente",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Paciente atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          },
          "404": {
            "description": "Paciente não encontrado"
          },
          "409": {
            "description": "Conflito com outro paciente (CPF ou email já existente)"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PatientsController_remove",
        "summary": "Remover paciente",
        "description": "Remove um paciente do sistema",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Paciente removido com sucesso"
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{id}/measurements": {
      "post": {
        "operationId": "PatientsController_createMeasurement",
        "summary": "Adicionar medição",
        "description": "Adiciona uma nova medição para um paciente específico",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeasurementDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Medição criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Measurement"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "PatientsController_findMeasurements",
        "summary": "Listar medições",
        "description": "Retorna todas as medições de um paciente específico",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de medições retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Measurement"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{id}/measurements/{measurementId}": {
      "delete": {
        "operationId": "PatientsController_removeMeasurement",
        "summary": "Excluir medição",
        "description": "Remove uma medição específica de um paciente",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "measurementId",
            "required": true,
            "in": "path",
            "description": "ID da medição",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Medição removida com sucesso"
          },
          "404": {
            "description": "Paciente ou medição não encontrados"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "PatientsController_updateMeasurement",
        "summary": "Atualizar medição",
        "description": "Atualiza uma medição específica de um paciente",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "measurementId",
            "required": true,
            "in": "path",
            "description": "ID da medição",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeasurementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Medição atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Measurement"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          },
          "404": {
            "description": "Paciente ou medição não encontrados"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/search": {
      "get": {
        "operationId": "PatientsController_search",
        "summary": "Buscar pacientes",
        "description": "Busca pacientes por nome ou email",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "query",
            "description": "Termo de busca (nome ou email)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pacientes encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Patient"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{patientId}/photos": {
      "post": {
        "operationId": "PatientPhotosController_create",
        "summary": "Create a new patient photo",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientPhotoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The photo has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientPhoto"
                }
              }
            }
          }
        },
        "tags": [
          "patient-photos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "PatientPhotosController_findAll",
        "summary": "Get all photos for a patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of patient photos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientPhoto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "patient-photos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{patientId}/photos/type/{type}": {
      "get": {
        "operationId": "PatientPhotosController_findByType",
        "summary": "Get photos by type for a patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of patient photos of a specific type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientPhoto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "patient-photos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{patientId}/photos/date-range": {
      "get": {
        "operationId": "PatientPhotosController_findByDateRange",
        "summary": "Get photos within a date range",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of patient photos within the specified date range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientPhoto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "patient-photos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{patientId}/photos/{id}": {
      "get": {
        "operationId": "PatientPhotosController_findOne",
        "summary": "Get a specific photo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found photo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientPhoto"
                }
              }
            }
          },
          "404": {
            "description": "Photo not found"
          }
        },
        "tags": [
          "patient-photos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "PatientPhotosController_update",
        "summary": "Update a photo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientPhotoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The photo has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientPhoto"
                }
              }
            }
          },
          "404": {
            "description": "Photo not found"
          }
        },
        "tags": [
          "patient-photos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PatientPhotosController_remove",
        "summary": "Delete a photo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The photo has been successfully deleted."
          },
          "404": {
            "description": "Photo not found"
          }
        },
        "tags": [
          "patient-photos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/consultations": {
      "post": {
        "operationId": "ConsultationsController_create",
        "summary": "Create a new consultation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsultationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The consultation has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consultation"
                }
              }
            }
          }
        },
        "tags": [
          "consultations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ConsultationsController_findAll",
        "summary": "Get all consultations or filter by patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all consultations or filtered by patient.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Consultation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "consultations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/consultations/{id}": {
      "get": {
        "operationId": "ConsultationsController_findOne",
        "summary": "Get a consultation by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the consultation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consultation"
                }
              }
            }
          },
          "404": {
            "description": "Consultation not found."
          }
        },
        "tags": [
          "consultations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ConsultationsController_update",
        "summary": "Update a consultation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The consultation has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consultation"
                }
              }
            }
          },
          "404": {
            "description": "Consultation not found."
          }
        },
        "tags": [
          "consultations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ConsultationsController_remove",
        "summary": "Delete a consultation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The consultation has been successfully deleted."
          },
          "404": {
            "description": "Consultation not found."
          }
        },
        "tags": [
          "consultations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/meal-plans": {
      "post": {
        "operationId": "MealPlansController_create",
        "summary": "Criar um novo plano alimentar",
        "description": "Cria um novo plano alimentar para um paciente com suas refeições",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMealPlanDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Plano alimentar criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealPlan"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "MealPlansController_findAll",
        "summary": "Listar todos os planos alimentares",
        "description": "Retorna uma lista de todos os planos alimentares cadastrados",
        "parameters": [
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "description": "ID do paciente para filtrar os planos",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de planos alimentares retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MealPlan"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/meal-plans/patient/{patientId}": {
      "get": {
        "operationId": "MealPlansController_findByPatient",
        "summary": "Buscar planos por paciente",
        "description": "Retorna todos os planos alimentares de um paciente específico",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de planos alimentares retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MealPlan"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/meal-plans/{id}": {
      "get": {
        "operationId": "MealPlansController_findOne",
        "summary": "Buscar plano alimentar por ID",
        "description": "Retorna os detalhes de um plano alimentar específico",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano alimentar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plano alimentar encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealPlan"
                }
              }
            }
          },
          "404": {
            "description": "Plano alimentar não encontrado"
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "MealPlansController_update",
        "summary": "Atualizar plano alimentar",
        "description": "Atualiza as informações de um plano alimentar existente",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano alimentar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMealPlanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plano alimentar atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealPlan"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          },
          "404": {
            "description": "Plano alimentar não encontrado"
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "MealPlansController_remove",
        "summary": "Remover plano alimentar",
        "description": "Remove um plano alimentar do sistema",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano alimentar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plano alimentar removido com sucesso"
          },
          "404": {
            "description": "Plano alimentar não encontrado"
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/meal-plans/{id}/meals": {
      "post": {
        "operationId": "MealPlansController_addMeal",
        "summary": "Adicionar refeição",
        "description": "Adiciona uma nova refeição a um plano alimentar existente",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano alimentar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMealDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Refeição adicionada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          },
          "404": {
            "description": "Plano alimentar não encontrado"
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "MealPlansController_getMeals",
        "summary": "Listar refeições do plano",
        "description": "Retorna uma lista de refeições de um plano alimentar específico",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano alimentar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de refeições retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meal"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Plano alimentar não encontrado"
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/meal-plans/search": {
      "get": {
        "operationId": "MealPlansController_search",
        "summary": "Buscar planos de alimentação",
        "description": "Busca planos de alimentação por nome",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "required": true,
            "in": "query",
            "description": "Termo de busca (nome do plano)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de planos encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MealPlan"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "meal-plans"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/meal-plan-templates": {
      "post": {
        "operationId": "MealPlanTemplatesController_create",
        "summary": "Create a new meal plan template",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMealPlanTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealPlanTemplateResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Meal Plan Templates"
        ]
      },
      "get": {
        "operationId": "MealPlanTemplatesController_findAll",
        "summary": "Get all meal plan templates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MealPlanTemplateResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Meal Plan Templates"
        ]
      }
    },
    "/meal-plan-templates/search/foods": {
      "get": {
        "operationId": "MealPlanTemplatesController_searchFoods",
        "summary": "Search food templates",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodTemplateResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Meal Plan Templates"
        ]
      }
    },
    "/meal-plan-templates/{id}": {
      "get": {
        "operationId": "MealPlanTemplatesController_findOne",
        "summary": "Get a meal plan template by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealPlanTemplateResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Meal Plan Templates"
        ]
      },
      "patch": {
        "operationId": "MealPlanTemplatesController_update",
        "summary": "Update a meal plan template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMealPlanTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealPlanTemplateResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Meal Plan Templates"
        ]
      },
      "delete": {
        "operationId": "MealPlanTemplatesController_remove",
        "summary": "Delete a meal plan template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Meal Plan Templates"
        ]
      }
    },
    "/meal-plan-templates/{id}/create-plan/{patientId}": {
      "post": {
        "operationId": "MealPlanTemplatesController_createPlanFromTemplate",
        "summary": "Create a meal plan from a template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Meal Plan Templates"
        ]
      }
    },
    "/stats": {
      "get": {
        "operationId": "StatsController_getStats",
        "summary": "Obter estatísticas",
        "description": "Retorna estatísticas gerais do sistema",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas retornadas com sucesso"
          }
        },
        "tags": [
          "stats"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "SmartNutri API",
    "description": "API para gestão completa de nutrição",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "patients",
      "description": "Gerenciamento de pacientes e suas informações"
    },
    {
      "name": "meal-plans",
      "description": "Gerenciamento de planos alimentares e refeições"
    },
    {
      "name": "foods",
      "description": "Gerenciamento de alimentos e informações nutricionais"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Servidor de Desenvolvimento"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "nutricionista@email.com",
            "description": "Email do nutricionista"
          },
          "password": {
            "type": "string",
            "example": "senha123",
            "description": "Senha do nutricionista"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateNutritionistDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "João Silva",
            "description": "Nome completo do nutricionista"
          },
          "email": {
            "type": "string",
            "example": "joao@email.com",
            "description": "Email do nutricionista"
          },
          "password": {
            "type": "string",
            "example": "senha123",
            "description": "Senha do nutricionista",
            "minLength": 6
          },
          "phone": {
            "type": "string",
            "example": "11999999999",
            "description": "Telefone do nutricionista"
          },
          "crn": {
            "type": "string",
            "example": "CRN/SP 12345",
            "description": "Número de registro profissional"
          },
          "specialties": {
            "example": [
              "Esportiva",
              "Clínica"
            ],
            "description": "Especialidades do nutricionista",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clinicName": {
            "type": "string",
            "example": "Clínica Nutri Saúde",
            "description": "Nome da clínica"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "Nutritionist": {
        "type": "object",
        "properties": {}
      },
      "UpdateNutritionistDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "João Silva",
            "description": "Nome completo do nutricionista"
          },
          "email": {
            "type": "string",
            "example": "joao@email.com",
            "description": "Email do nutricionista"
          },
          "phone": {
            "type": "string",
            "example": "11999999999",
            "description": "Telefone do nutricionista"
          },
          "crn": {
            "type": "string",
            "example": "CRN/SP 12345",
            "description": "Número de registro profissional"
          },
          "specialties": {
            "example": [
              "Esportiva",
              "Clínica"
            ],
            "description": "Especialidades do nutricionista",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clinicName": {
            "type": "string",
            "example": "Clínica Nutri Saúde",
            "description": "Nome da clínica"
          }
        }
      },
      "CreatePatientDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do paciente",
            "example": "João da Silva"
          },
          "cpf": {
            "type": "string",
            "description": "CPF do paciente"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente",
            "example": "joao.silva@email.com"
          },
          "phone": {
            "type": "string",
            "description": "Telefone do paciente",
            "example": "(11) 98765-4321"
          },
          "birthDate": {
            "type": "string",
            "description": "Data de nascimento do paciente",
            "example": "1990-01-01"
          },
          "gender": {
            "type": "string",
            "description": "Gênero do paciente",
            "enum": [
              "M",
              "F",
              "OTHER"
            ],
            "example": "M"
          },
          "status": {
            "type": "string",
            "description": "Status do paciente",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active"
          },
          "height": {
            "type": "number",
            "description": "Altura do paciente em centímetros",
            "example": 170
          },
          "weight": {
            "type": "number",
            "description": "Peso do paciente em quilogramas",
            "example": 70
          },
          "goals": {
            "description": "Objetivos do paciente",
            "example": [
              "Perda de peso",
              "Ganho de massa muscular"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allergies": {
            "description": "Alergias do paciente",
            "example": [
              "Amendoim",
              "Lactose"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "healthConditions": {
            "description": "Condições de saúde do paciente",
            "example": [
              "Diabetes",
              "Hipertensão"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medications": {
            "description": "Medicamentos em uso",
            "example": [
              "Metformina",
              "Losartana"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "observations": {
            "type": "string",
            "description": "Observações gerais",
            "example": "Paciente com histórico familiar de diabetes"
          },
          "nutritionistId": {
            "type": "string",
            "description": "ID do nutricionista responsável",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "name"
        ]
      },
      "Patient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do paciente"
          },
          "name": {
            "type": "string",
            "description": "Nome do paciente"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente"
          },
          "cpf": {
            "type": "string",
            "description": "CPF do paciente"
          },
          "phone": {
            "type": "string",
            "description": "Telefone do paciente"
          },
          "address": {
            "type": "string",
            "description": "Endereço do paciente"
          },
          "birthDate": {
            "type": "string",
            "description": "Data de nascimento do paciente"
          },
          "gender": {
            "type": "string",
            "description": "Gênero do paciente"
          },
          "instagram": {
            "type": "string",
            "description": "Instagram do paciente"
          },
          "status": {
            "type": "string",
            "description": "Status do paciente"
          },
          "nutritionistId": {
            "type": "string",
            "description": "ID do nutricionista"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "cpf",
          "phone",
          "address",
          "birthDate",
          "gender",
          "instagram",
          "status",
          "nutritionistId"
        ]
      },
      "UpdatePatientDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do paciente"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente"
          },
          "cpf": {
            "type": "string",
            "description": "CPF do paciente"
          },
          "phone": {
            "type": "string",
            "description": "Telefone do paciente"
          },
          "address": {
            "type": "string",
            "description": "Endereço do paciente"
          },
          "birthDate": {
            "type": "string",
            "description": "Data de nascimento do paciente"
          },
          "gender": {
            "type": "string",
            "description": "Gênero do paciente",
            "enum": [
              "M",
              "F",
              "OTHER"
            ]
          },
          "instagram": {
            "type": "string",
            "description": "Instagram do paciente"
          }
        }
      },
      "BodyMeasurements": {
        "type": "object",
        "properties": {
          "chest": {
            "type": "number",
            "description": "Medida do peito em centímetros",
            "example": 95
          },
          "waist": {
            "type": "number",
            "description": "Medida da cintura em centímetros",
            "example": 80
          },
          "hip": {
            "type": "number",
            "description": "Medida do quadril em centímetros",
            "example": 100
          },
          "arm": {
            "type": "number",
            "description": "Medida do braço em centímetros",
            "example": 32
          },
          "thigh": {
            "type": "number",
            "description": "Medida da coxa em centímetros",
            "example": 55
          },
          "neck": {
            "type": "number",
            "description": "Medida do pescoço em centímetros",
            "example": 38
          },
          "shoulder": {
            "type": "number",
            "description": "Medida do ombro em centímetros",
            "example": 110
          },
          "abdomen": {
            "type": "number",
            "description": "Medida do abdômen em centímetros",
            "example": 90
          },
          "relaxedArm": {
            "type": "number",
            "description": "Medida do braço relaxado em centímetros",
            "example": 30
          },
          "contractedArm": {
            "type": "number",
            "description": "Medida do braço contraído em centímetros",
            "example": 33
          },
          "forearm": {
            "type": "number",
            "description": "Medida do antebraço em centímetros",
            "example": 28
          },
          "proximalThigh": {
            "type": "number",
            "description": "Medida da coxa proximal em centímetros",
            "example": 58
          },
          "medialThigh": {
            "type": "number",
            "description": "Medida da coxa medial em centímetros",
            "example": 50
          },
          "distalThigh": {
            "type": "number",
            "description": "Medida da coxa distal em centímetros",
            "example": 40
          },
          "calf": {
            "type": "number",
            "description": "Medida da panturrilha em centímetros",
            "example": 38
          }
        }
      },
      "Skinfolds": {
        "type": "object",
        "properties": {
          "tricipital": {
            "type": "number",
            "description": "Dobra cutânea tricipital em mm",
            "example": 15
          },
          "bicipital": {
            "type": "number",
            "description": "Dobra cutânea bicipital em mm",
            "example": 10
          },
          "abdominal": {
            "type": "number",
            "description": "Dobra cutânea abdominal em mm",
            "example": 25
          },
          "subscapular": {
            "type": "number",
            "description": "Dobra cutânea subescapular em mm",
            "example": 18
          },
          "axillaryMedian": {
            "type": "number",
            "description": "Dobra cutânea axilar média em mm",
            "example": 12
          },
          "thigh": {
            "type": "number",
            "description": "Dobra cutânea da coxa em mm",
            "example": 28
          },
          "thoracic": {
            "type": "number",
            "description": "Dobra cutânea torácica em mm",
            "example": 14
          },
          "suprailiac": {
            "type": "number",
            "description": "Dobra cutânea suprailíaca em mm",
            "example": 22
          },
          "calf": {
            "type": "number",
            "description": "Dobra cutânea da panturrilha em mm",
            "example": 16
          },
          "supraspinal": {
            "type": "number",
            "description": "Dobra cutânea supraespinhal em mm",
            "example": 15
          }
        }
      },
      "BoneDiameters": {
        "type": "object",
        "properties": {
          "humerus": {
            "type": "number",
            "description": "Diâmetro do úmero em cm",
            "example": 6.8
          },
          "wrist": {
            "type": "number",
            "description": "Diâmetro do punho em cm",
            "example": 5.5
          },
          "femur": {
            "type": "number",
            "description": "Diâmetro do fêmur em cm",
            "example": 9.2
          }
        }
      },
      "CreateMeasurementDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Data da medição",
            "example": "2024-03-20"
          },
          "weight": {
            "type": "number",
            "description": "Peso em quilogramas",
            "example": 70.5
          },
          "height": {
            "type": "number",
            "description": "Altura em centímetros",
            "example": 170
          },
          "sittingHeight": {
            "type": "number",
            "description": "Altura sentado em centímetros",
            "example": 90
          },
          "kneeHeight": {
            "type": "number",
            "description": "Altura do joelho em centímetros",
            "example": 50
          },
          "bodyFat": {
            "type": "number",
            "description": "Percentual de gordura corporal",
            "example": 15.5
          },
          "fatMass": {
            "type": "number",
            "description": "Massa gorda em kg",
            "example": 12.5
          },
          "muscleMassPercentage": {
            "type": "number",
            "description": "Percentual de massa muscular",
            "example": 45.2
          },
          "muscleMass": {
            "type": "number",
            "description": "Massa muscular em quilogramas",
            "example": 35.2
          },
          "fatFreeMass": {
            "type": "number",
            "description": "Massa livre de gordura em kg",
            "example": 58
          },
          "boneMass": {
            "type": "number",
            "description": "Massa óssea em kg",
            "example": 3.1
          },
          "bodyWater": {
            "type": "number",
            "description": "Percentual de água corporal",
            "example": 60.5
          },
          "visceralFat": {
            "type": "number",
            "description": "Gordura visceral",
            "example": 8.5
          },
          "metabolicAge": {
            "type": "number",
            "description": "Idade metabólica",
            "example": 34
          },
          "measurements": {
            "description": "Medidas corporais",
            "example": {
              "chest": 95,
              "waist": 80,
              "hip": 100,
              "arm": 32,
              "thigh": 55
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/BodyMeasurements"
              }
            ]
          },
          "skinfolds": {
            "description": "Dobras cutâneas",
            "example": {
              "tricipital": 15,
              "bicipital": 10,
              "abdominal": 25,
              "subscapular": 18
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Skinfolds"
              }
            ]
          },
          "boneDiameters": {
            "description": "Diâmetros ósseos",
            "example": {
              "humerus": 6.8,
              "wrist": 5.5,
              "femur": 9.2
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/BoneDiameters"
              }
            ]
          },
          "skinfoldFormula": {
            "type": "string",
            "description": "Fórmula de dobras cutâneas usada",
            "example": "pollock3"
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "nutritionistId": {
            "type": "string",
            "description": "ID do nutricionista responsável (opcional, obtido automaticamente do token JWT)",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "date",
          "weight",
          "measurements",
          "patientId"
        ]
      },
      "Measurement": {
        "type": "object",
        "properties": {}
      },
      "CreatePatientPhotoDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "description": "ID do paciente",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "photoUrl": {
            "type": "string",
            "description": "URL da foto",
            "example": "https://storage.example.com/photos/patient123-front.jpg"
          },
          "photoType": {
            "type": "string",
            "description": "Tipo da foto",
            "enum": [
              "front",
              "back",
              "left_side",
              "right_side",
              "other"
            ],
            "example": "front"
          },
          "photoDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data da foto",
            "example": "2024-04-01"
          },
          "notes": {
            "type": "string",
            "description": "Observações sobre a foto",
            "example": "Foto tirada após 3 meses de dieta"
          }
        },
        "required": [
          "patientId",
          "photoUrl",
          "photoType",
          "photoDate"
        ]
      },
      "PatientPhoto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da foto"
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente"
          },
          "nutritionistId": {
            "type": "string",
            "description": "ID do nutricionista"
          },
          "photoUrl": {
            "type": "string",
            "description": "URL da foto"
          },
          "photoType": {
            "type": "string",
            "description": "Tipo da foto",
            "enum": [
              "front",
              "back",
              "left_side",
              "right_side",
              "other"
            ],
            "example": "front"
          },
          "photoDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data da foto"
          },
          "notes": {
            "type": "string",
            "description": "Observações sobre a foto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data de criação do registro"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data da última atualização do registro"
          }
        },
        "required": [
          "id",
          "patientId",
          "nutritionistId",
          "photoUrl",
          "photoType",
          "photoDate",
          "notes",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdatePatientPhotoDto": {
        "type": "object",
        "properties": {
          "photoUrl": {
            "type": "string",
            "description": "URL da foto",
            "example": "https://storage.example.com/photos/patient123-front-updated.jpg"
          },
          "photoType": {
            "type": "string",
            "description": "Tipo da foto",
            "enum": [
              "front",
              "back",
              "left_side",
              "right_side",
              "other"
            ],
            "example": "front"
          },
          "photoDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data da foto",
            "example": "2024-04-01"
          },
          "notes": {
            "type": "string",
            "description": "Observações sobre a foto",
            "example": "Foto tirada após 3 meses de dieta"
          }
        }
      },
      "CreateConsultationDto": {
        "type": "object",
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "Data da consulta",
            "example": "2024-04-15T14:00:00Z"
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "notes": {
            "type": "string",
            "description": "Anotações da consulta",
            "example": "Paciente relatou melhora nos sintomas digestivos após ajustes na dieta."
          },
          "status": {
            "type": "string",
            "description": "Status da consulta",
            "enum": [
              "scheduled",
              "completed",
              "cancelled",
              "rescheduled"
            ],
            "example": "scheduled",
            "default": "scheduled"
          },
          "type": {
            "type": "string",
            "description": "Tipo da consulta",
            "enum": [
              "initial",
              "follow_up",
              "assessment",
              "meal_plan_review",
              "other"
            ],
            "example": "follow_up",
            "default": "follow_up"
          }
        },
        "required": [
          "date",
          "patientId",
          "status",
          "type"
        ]
      },
      "Consultation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da consulta"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "Data da consulta"
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente"
          },
          "nutritionistId": {
            "type": "string",
            "description": "ID do nutricionista"
          },
          "notes": {
            "type": "string",
            "description": "Anotações da consulta"
          },
          "status": {
            "type": "string",
            "description": "Status da consulta",
            "enum": [
              "scheduled",
              "completed",
              "cancelled",
              "rescheduled"
            ],
            "example": "scheduled"
          },
          "type": {
            "type": "string",
            "description": "Tipo da consulta",
            "enum": [
              "initial",
              "follow_up",
              "assessment",
              "meal_plan_review",
              "other"
            ],
            "example": "follow_up"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data de criação do registro"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data da última atualização do registro"
          }
        },
        "required": [
          "id",
          "date",
          "patientId",
          "nutritionistId",
          "notes",
          "status",
          "type",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateMealFoodDto": {
        "type": "object",
        "properties": {
          "foodId": {
            "type": "string",
            "description": "ID do alimento",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "amount": {
            "type": "number",
            "description": "Quantidade do alimento",
            "example": 100
          },
          "unit": {
            "type": "string",
            "description": "Unidade de medida",
            "example": "g"
          }
        },
        "required": [
          "foodId",
          "amount",
          "unit"
        ]
      },
      "CreateMealDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome da refeição",
            "example": "Café da manhã"
          },
          "time": {
            "type": "string",
            "description": "Horário da refeição",
            "example": "08:00"
          },
          "notes": {
            "type": "string",
            "description": "Observações sobre a refeição"
          },
          "mealFoods": {
            "description": "Lista de alimentos da refeição",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateMealFoodDto"
            }
          }
        },
        "required": [
          "name",
          "time",
          "mealFoods"
        ]
      },
      "CreateMealPlanDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do plano alimentar",
            "example": "Plano Alimentar Semanal"
          },
          "notes": {
            "type": "string",
            "description": "Observações sobre o plano alimentar",
            "example": "Plano alimentar para perda de peso"
          },
          "startDate": {
            "type": "string",
            "description": "Data de início do plano",
            "example": "2024-03-20"
          },
          "endDate": {
            "type": "string",
            "description": "Data de término do plano",
            "example": "2024-03-27"
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "nutritionistId": {
            "type": "string",
            "description": "ID do nutricionista responsável",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "meals": {
            "description": "Lista de refeições do plano",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateMealDto"
            }
          }
        },
        "required": [
          "name",
          "startDate",
          "endDate",
          "patientId",
          "nutritionistId",
          "meals"
        ]
      },
      "Meal": {
        "type": "object",
        "properties": {
          "totalCalories": {
            "type": "number",
            "example": 500.25
          },
          "totalProtein": {
            "type": "number",
            "example": 30.5
          },
          "totalCarbs": {
            "type": "number",
            "example": 60.75
          },
          "totalFat": {
            "type": "number",
            "example": 20.3
          }
        },
        "required": [
          "totalCalories",
          "totalProtein",
          "totalCarbs",
          "totalFat"
        ]
      },
      "MealPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "Plano Alimentar Semanal"
          },
          "description": {
            "type": "string",
            "example": "Plano alimentar para perda de peso"
          },
          "patientId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "nutritionistId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "nutritionist": {
            "$ref": "#/components/schemas/Nutritionist"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-20T10:00:00Z"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-27T10:00:00Z"
          },
          "meals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Meal"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-20T10:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-20T10:00:00Z"
          },
          "dailyCalories": {
            "type": "number",
            "example": 2000.5
          },
          "dailyProtein": {
            "type": "number",
            "example": 150.75
          },
          "dailyCarbs": {
            "type": "number",
            "example": 250.3
          },
          "dailyFat": {
            "type": "number",
            "example": 80.2
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "patientId",
          "patient",
          "nutritionistId",
          "nutritionist",
          "startDate",
          "endDate",
          "meals",
          "createdAt",
          "updatedAt",
          "dailyCalories",
          "dailyProtein",
          "dailyCarbs",
          "dailyFat"
        ]
      },
      "UpdateMealPlanDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do plano alimentar",
            "example": "Plano Semanal"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data de início do plano",
            "example": "2025-04-05"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data de término do plano",
            "example": "2025-04-12"
          },
          "notes": {
            "type": "string",
            "description": "Observações sobre o plano"
          },
          "meals": {
            "description": "Lista de refeições do plano",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateMealDto"
            }
          }
        }
      },
      "CreateMealPlanTemplateDto": {
        "type": "object",
        "properties": {}
      },
      "FoodTemplateResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "portion": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "portion",
          "category",
          "tags",
          "description"
        ]
      },
      "MealTemplateResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "foods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FoodTemplateResponseDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "time",
          "foods"
        ]
      },
      "MealPlanTemplateResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isPublic": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "meals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MealTemplateResponseDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "isPublic",
          "createdAt",
          "updatedAt",
          "meals"
        ]
      },
      "UpdateMealPlanTemplateDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}