# SmartNutri Database Implementation Plan

This document outlines the implementation plan for the database improvements recommended in the DATABASE_EVALUATION.md file. The plan is organized into phases to ensure a systematic approach to enhancing the SmartNutri database structure.

## Phase 1: Critical Functionality Enhancements

### 1.1 Move CRN Field from Patient to Nutritionist

**Current Issue:**
The CRN (Nutritionist Registration Number) is currently stored in the Patient table, which is conceptually incorrect as it belongs to the Nutritionist.

**Implementation Steps:**

1. Update nutritionists table with CRN values from patients
2. Remove CRN constraint and column from patients
3. Add unique constraint to nutritionist CRN
4. Update the Nutritionist entity in TypeORM

### 1.2 Add PatientPhoto Entity

**Implementation Steps:**

1. Create patient_photos table with appropriate fields and constraints
2. Create a TypeORM entity for PatientPhoto
3. Update the Patient entity to include the relationship

### 1.3 Add Consultation Entity

**Implementation Steps:**

1. Create consultations table with appropriate fields and constraints
2. Create a TypeORM entity for Consultation
3. Update the Patient and Nutritionist entities to include the relationship
4. Update the Measurement entity to link to consultations

### 1.4 Enhance Food Entity

**Implementation Steps:**

1. Add new columns to foods table (version, is_verified, source, usage metrics)
2. Create a more comprehensive categories structure
3. Add indexes for improved search performance
4. Update the Food entity in TypeORM

## Phase 2: Performance Optimizations

### 2.1 Add Calculated Nutrition Fields

**Implementation Steps:**

1. Add calculated nutrition fields to meals and meal plans
2. Create triggers to maintain these calculated fields
3. Update the TypeORM entities

### 2.2 Implement Materialized Views for Reports

**Implementation Steps:**

1. Create a materialized view for patient progress
2. Create a materialized view for nutritional analysis
3. Create a function to refresh the materialized views
4. Set up a scheduled job to refresh the materialized views

### 2.3 Optimize Indexing Strategy

**Implementation Steps:**

1. Add composite indexes for common query patterns
2. Add partial indexes for filtered queries
3. Add GIN indexes for JSONB fields

## Phase 3: Scalability Improvements

### 3.1 Implement Data Partitioning

**Implementation Steps:**

1. Set up partitioning for measurements table by date ranges
2. Create a function to automatically create new partitions
3. Migrate data from the old table to the partitioned table

### 3.2 Add MealPlanTemplate Functionality

**Implementation Steps:**

1. Create tables for meal plan templates, meal templates, and food templates
2. Create TypeORM entities for the template tables
3. Add functions to create meal plans from templates

### 3.3 Enhance Search Capabilities for Foods

**Implementation Steps:**

1. Enable pg_trgm extension for text search
2. Add full-text search capabilities to the foods table
3. Create functions and triggers to maintain search vectors
4. Add API endpoints for advanced food search

## Implementation Timeline

### Week 1-2: Phase 1

- Move CRN field from Patient to Nutritionist
- Add PatientPhoto entity
- Add Consultation entity

### Week 3-4: Phase 1 (continued) & Phase 2

- Enhance Food entity
- Add calculated nutrition fields
- Implement materialized views for reports

### Week 5-6: Phase 2 (continued) & Phase 3

- Optimize indexing strategy
- Implement data partitioning
- Add MealPlanTemplate functionality

### Week 7-8: Phase 3 (continued) & Testing

- Enhance search capabilities for foods
- Comprehensive testing and performance tuning
- Documentation updates

## Conclusion

This implementation plan addresses the critical gaps identified in the database evaluation and provides a structured approach to enhancing the SmartNutri database. By following this plan, the system will be better equipped to handle the requirements of a robust nutrition management system, with improved performance, scalability, and functionality.

The most critical improvements focus on:

1. Correcting data model inconsistencies (CRN field)
2. Adding support for visual progress tracking (PatientPhoto)
3. Enhancing patient monitoring (Consultation)
4. Optimizing nutritional calculations for better performance
5. Improving the meal planning process with templates

These enhancements will significantly improve the system's ability to support nutritionists in managing patients, creating meal plans, and tracking comprehensive patient data.
